worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;

    # Use Docker's embedded DNS (available inside containers)
    resolver 127.0.0.11 ipv6=off valid=30s;

    log_format main_json escape=json
      '{ "time":"$time_local", "remote_addr":"$remote_addr", '
      '"request":"$request", "status":$status, "bytes":$body_bytes_sent, '
      '"referer":"$http_referer", "ua":"$http_user_agent", '
      '"req_time":$request_time, "upstream_time":"$upstream_response_time" }';
    access_log /var/log/nginx/access.log main_json;
    error_log  /var/log/nginx/error.log warn;

    # HTTP â†’ HTTPS redirect
    server {
        listen 80;
        server_name app.local;
        return 301 https://$host$request_uri;
    }

    # TLS terminator + reverse proxy to app:8000
    server {
        listen 8443 ssl;
        http2 on;
        server_name app.local 127.0.0.1 app.localhost;

        ssl_certificate     /etc/nginx/certs/app.local.pem;
        ssl_certificate_key /etc/nginx/certs/app.local-key.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;

        # Defer DNS resolution by using a variable + resolver
        set $app_upstream app:8000;

        location / {
            proxy_pass http://$app_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header Authorization $http_authorization;
        }

        location = /healthz {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header Authorization $http_authorization;
            proxy_pass http://$app_upstream/healthz;
        }
    }
}